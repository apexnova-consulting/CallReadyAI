import { NextResponse } from "next/server"
import { auth } from "@/lib/auth"
import { db } from "@/lib/db"

export const runtime = "nodejs"

export async function GET(
  request: Request,
  { params }: { params: { id: string } }
) {
  try {
    const session = await auth()
    if (!session?.user?.id) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const brief = await db.brief.findUnique({
      where: { id: params.id },
    })

    if (!brief || brief.userId !== session.user.id) {
      return NextResponse.json({ error: "Brief not found" }, { status: 404 })
    }

    // Simple HTML to PDF conversion
    const html = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>CallReady AI - Sales Call Brief</title>
          <style>
            body {
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
              line-height: 1.6;
              color: #333;
              max-width: 800px;
              margin: 0 auto;
              padding: 40px 20px;
            }
            .header {
              text-align: center;
              margin-bottom: 40px;
              padding-bottom: 20px;
              border-bottom: 2px solid #667eea;
            }
            .header h1 {
              color: #667eea;
              font-size: 28px;
              margin: 0;
            }
            .prospect-info {
              background: #f8fafc;
              padding: 20px;
              border-radius: 8px;
              margin-bottom: 30px;
            }
            .prospect-info h2 {
              margin: 0 0 10px 0;
              color: #374151;
            }
            .prospect-info p {
              margin: 5px 0;
              color: #6b7280;
            }
            .section {
              margin-bottom: 30px;
            }
            .section h3 {
              color: #374151;
              font-size: 18px;
              margin-bottom: 15px;
              padding-bottom: 5px;
              border-bottom: 1px solid #e5e7eb;
            }
            .section p {
              color: #4b5563;
              margin: 0;
              white-space: pre-wrap;
            }
            .footer {
              margin-top: 40px;
              padding-top: 20px;
              border-top: 1px solid #e5e7eb;
              text-align: center;
              color: #9ca3af;
              font-size: 14px;
            }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>CallReady AI</h1>
            <p>Sales Call Brief</p>
          </div>

          <div class="prospect-info">
            <h2>${brief.prospectName} - ${brief.companyName}</h2>
            <p><strong>Role:</strong> ${brief.role}</p>
            ${brief.meetingLink ? `<p><strong>Meeting Link:</strong> ${brief.meetingLink}</p>` : ""}
            <p><strong>Generated:</strong> ${new Date(brief.createdAt).toLocaleDateString()}</p>
          </div>

          <div class="section">
            <h3>Prospect Overview</h3>
            <p>${brief.overview}</p>
          </div>

          <div class="section">
            <h3>Company Context</h3>
            <p>${brief.context}</p>
          </div>

          <div class="section">
            <h3>Potential Pain Points</h3>
            <p>${brief.painPoints}</p>
          </div>

          <div class="section">
            <h3>Key Talking Points</h3>
            <p>${brief.talkingPoints}</p>
          </div>

          <div class="section">
            <h3>Questions to Ask</h3>
            <p>${brief.questions}</p>
          </div>

          <div class="section">
            <h3>Competitive Insights</h3>
            <p>${brief.competitive}</p>
          </div>

          ${brief.notes ? `
          <div class="section">
            <h3>Additional Notes</h3>
            <p>${brief.notes}</p>
          </div>
          ` : ""}

          <div class="footer">
            <p>Generated by CallReady AI on ${new Date().toLocaleDateString()}</p>
          </div>
        </body>
      </html>
    `

    // Return HTML for now - in production, you'd use a PDF library
    return new NextResponse(html, {
      headers: {
        "Content-Type": "text/html",
        "Content-Disposition": `attachment; filename="${brief.prospectName}-${brief.companyName}-Brief.html"`,
      },
    })
  } catch (error) {
    console.error("PDF generation error:", error)
    return NextResponse.json(
      { error: "Failed to generate PDF" },
      { status: 500 }
    )
  }
}
