import { NextResponse } from "next/server"
import { auth } from "@/lib/auth"
import { db } from "@/lib/db"

export async function POST(
  request: Request,
  { params }: { params: { id: string } }
) {
  try {
    const session = await auth()
    if (!session?.user?.id) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const brief = await db.brief.findUnique({
      where: { id: params.id },
    })

    if (!brief || brief.userId !== session.user.id) {
      return NextResponse.json({ error: "Brief not found" }, { status: 404 })
    }

    // Simple email sending - in production, use Resend or similar
    const emailContent = `
CallReady AI - Sales Call Brief

${brief.prospectName} - ${brief.companyName}
${brief.role}
${brief.meetingLink ? `Meeting Link: ${brief.meetingLink}` : ""}

PROSPECT OVERVIEW
${brief.overview}

COMPANY CONTEXT
${brief.context}

POTENTIAL PAIN POINTS
${brief.painPoints}

KEY TALKING POINTS
${brief.talkingPoints}

QUESTIONS TO ASK
${brief.questions}

COMPETITIVE INSIGHTS
${brief.competitive}

${brief.notes ? `ADDITIONAL NOTES
${brief.notes}` : ""}

Generated by CallReady AI on ${new Date(brief.createdAt).toLocaleDateString()}
    `

    // For now, just return success - in production, send actual email
    console.log("Email would be sent to:", session.user.email)
    console.log("Email content:", emailContent)

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error("Email error:", error)
    return NextResponse.json(
      { error: "Failed to send email" },
      { status: 500 }
    )
  }
}
