import { NextResponse } from "next/server"
import { getSession } from "@/lib/auth"
import { getBrief } from "@/lib/brief-storage"

export async function POST(req: Request) {
  try {
    const session = await getSession()
    if (!session?.user?.id) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 })
    }

    const body = await req.json()
    const { briefId, transcript, aiResponse } = body

    // Get the original brief for context
    const brief = getBrief(briefId)
    if (!brief) {
      return NextResponse.json({ error: "Brief not found" }, { status: 404 })
    }

    // AI prompt for follow-up email generation
    const systemPrompt = `You are CallReady AI, an expert sales follow-up email writer. Generate a professional, personalized follow-up email based on the sales call conversation.

The email should:
1. Reference the conversation naturally
2. Include key discussion points
3. Provide clear next steps
4. Be professional but personable
5. Include relevant attachments or resources if mentioned
6. Be concise (under 200 words)

Format the email properly with subject line, greeting, body, and signature.`

    const userPrompt = `
PROSPECT INFORMATION:
Name: ${brief.prospectName}
Company: ${brief.companyName}
Role: ${brief.role}

ORIGINAL BRIEF CONTEXT:
Pain Points: ${brief.painPoints}
Talking Points: ${brief.talkingPoints}
Buyer Intent Signals: ${brief.buyerIntentSignals}

CALL TRANSCRIPT:
${transcript}

AI ANALYSIS NOTES:
${aiResponse ? JSON.stringify(aiResponse, null, 2) : 'No analysis available'}

Generate a professional follow-up email that references our conversation and provides clear next steps.`

    console.log("Generating follow-up email...")

    // Call Gemini API for email generation
    if (!process.env.GEMINI_API_KEY) {
      return NextResponse.json(
        { error: "AI service not configured" },
        { status: 500 }
      )
    }

    const geminiResponse = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-goog-api-key': process.env.GEMINI_API_KEY,
      },
      body: JSON.stringify({
        contents: [{
          parts: [{
            text: `${systemPrompt}\n\n${userPrompt}`
          }]
        }],
        generationConfig: {
          temperature: 0.7,
          maxOutputTokens: 1000,
        }
      })
    })

    if (!geminiResponse.ok) {
      throw new Error(`Gemini API error: ${geminiResponse.status}`)
    }

    const geminiData = await geminiResponse.json()
    const emailContent = geminiData.candidates?.[0]?.content?.parts?.[0]?.text || ""

    // Parse and format the email
    const formattedEmail = formatFollowUpEmail(emailContent, brief.prospectName)

    return NextResponse.json({
      followUpEmail: formattedEmail
    })

  } catch (error) {
    console.error("Follow-up email generation error:", error)
    return NextResponse.json(
      { error: "Failed to generate follow-up email" },
      { status: 500 }
    )
  }
}

function formatFollowUpEmail(emailContent: string, prospectName: string): string {
  // Extract subject line if present
  const lines = emailContent.split('\n').filter(line => line.trim())
  let subject = ''
  let body = emailContent
  
  // Look for subject line
  const subjectMatch = emailContent.match(/Subject:\s*(.+)/i)
  if (subjectMatch) {
    subject = subjectMatch[1]
    body = emailContent.replace(/Subject:\s*.+/i, '').trim()
  } else {
    subject = `Follow-up: Our conversation about your business needs`
  }
  
  // Ensure proper email format
  const formattedEmail = `
Subject: ${subject}

Hi ${prospectName},

${body}

Best regards,
Your CallReady AI Sales Team

---
Generated by CallReady AI - Sales Call Intelligence
  `.trim()
  
  return formattedEmail
}
